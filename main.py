from machine import Pin, SPI
import ssd1306
import utime
import ntptime
import network
import freesans20
import machine
import framebuf
import dht
import urequests




#construct sensor
d = dht.DHT11(machine.Pin(2))

#connect to router
ap_if = network.WLAN(network.AP_IF)
ap_if.active(False)

sta_if = network.WLAN(network.STA_IF)
sta_if.active(True)
sta_if.ifconfig(('192.168.0.200','255.255.255.0','192.168.0.1','8.8.8.8'))
sta_if.connect('router_AP','password')

#set the oled display
hspi = SPI(-1, baudrate=1000000, polarity=1, phase=0, sck=Pin(14), mosi=Pin(13), miso=Pin(12))
#hspi = machine.SPI(1, baudrate=8000000, polarity=0, phase=0)
dc=Pin(4)
res=Pin(5)
cs=Pin(15)

oled = ssd1306.SSD1306_SPI(128,64,hspi,dc,res,cs)
oled.fill(0)


#set time from internet
rtc = machine.RTC()
try:
    #oled.text('Connecting to',0,10)
    #oled.text('a time server..',0,20)
    #oled.show()
    #utime.sleep(0.5)
    ntptime.settime()
except:
    pass

#convert internet time tuple to RTC time tuple
bg=utime.localtime(utime.time()+7200)
machine.RTC().datetime((bg[0],bg[1],bg[2],0,bg[3],bg[4],bg[5],bg[6]))
months = {1:"Jan", 2:"Feb", 3:"Mar", 4:"Apr", 5:"May", 6:"Jun", 7:"Jul", 8:"Aug", 9:"Sep", 10:"Oct", 11:"Nov", 12:"Dec"}


data = urequests.get('http://jsonplaceholder.typicode.com/albums/1')
print(data.text)

def tht():
    datetime=rtc.datetime()
    year=datetime[0]
    month=datetime[1]
    day= datetime[2]
    hour = datetime[4]
    minute=datetime[5]
    
    oled.fill(0)
    buffer=bytearray(b'\x00\x07\x80\x00\x00\xfe\x1f\xc0\xc0\x00\xfc\x38\xe0\xe0\x00\x00\x30\x61\xe0\x00\x00\x30\x61\xb0\x00\x3e\x30\x63\x30\x00\x3c\x30\x21\xb1\x80\x00\x30\x21\xf1\xc0\x00\x30\x20\xc3\xc0\xfe\x30\x20\x03\x60\x7c\x30\x20\x06\x60\x00\x30\x20\x07\x60\x00\x30\x20\x03\xc0\x3e\x30\x20\x01\x80\x1c\x30\x20\x00\x00\x00\x30\x20\x00\x00\x00\x30\x20\x00\x00\xfe\x33\x20\x00\x00\x7c\x33\x20\x00\x00\x00\x33\x20\x00\x00\x00\x33\x20\x00\x00\x3e\x33\x20\x00\x00\x00\x33\x20\x00\x00\x00\x33\x20\x00\x00\x7c\x33\x20\x00\x00\xfe\x33\x20\x00\x00\x00\x73\x30\x00\x00\x00\xe3\x38\x00\x00\x00\xc7\x18\x00\x00\x01\x8f\x8c\x00\x00\x01\x9c\xcc\x00\x00\x01\x98\xcc\x00\x00\x01\x98\xcc\x00\x00\x01\x98\xcc\x00\x00\x01\x8f\xcc\x00\x00\x00\xc7\x1c\x00\x00\x00\xe0\x18\x00\x00\x00\x70\x70\x00\x00\x00\x3f\xe0\x00\x00\x00\x0f\x80\x00\x00')
    fb = framebuf.FrameBuffer(buffer, 35, 40, framebuf.MONO_HLSB)
    oled.framebuf.blit(fb, 20, 15)

    try:
        d.measure()
    except:
        pass    

    utime.sleep(5)
    oled.text(("%d:%02d") % (hour, minute),45,0)
    oled.text(str(d.temperature())+' C', 70, 25)
    oled.text(str(d.humidity())+' %', 70, 38)
    oled.show()
    #print(str(d.temperature())+' '+str(d.humidity()))
    utime.sleep(15)
    
def aeroisk():
    oled.fill(0)
    buffer = bytearray(b'\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x02\x00\x00\x00\x00\x00\x00\x00\x02\x00\x00\x00\x00\x00\x00\x00\x06\x00\x00\x00\x00\x00\x00\x00\x06\x00\x00\x00\x00\x00\x00\x00\x06\x00\x00\x00\x00\x00\x00\x00\x06\x00\x00\x00\x00\x00\x00\x00\x06\x00\x00\x00\x00\x00\x00\x00\x06\x00\x00\x00\x00\x00\x00\x00\x07\x00\x00\x00\x00\x00\x00\x00\x07\x00\x00\x00\x00\x00\x00\x00\x1f\xc0\x00\x00\x00\x00\x00\x00\x7f\xf0\x00\x00\x00\x00\x00\x01\xff\xf8\x00\x00\x00\x00\x00\x03\xe0\x7c\x00\x00\x00\x00\x00\x03\x80\x1e\x00\x00\x00\x00\x00\x07\x00\x0f\x00\x00\x00\x00\x00\x0f\x00\x07\x00\x00\x00\x00\x00\x0e\x20\x27\x00\x00\x00\x00\x00\x0e\x38\xe3\x80\x00\x00\x00\x00\x0e\x1f\x83\x80\x00\x00\x00\x00\x0e\x06\x03\x80\x00\x00\x7f\x80\x0e\x00\x03\x80\x0f\xf0\x1f\xff\xfe\x00\x07\xff\xff\xc0\x01\xff\xff\x00\x07\xff\xfc\x00\x00\xff\xff\x00\x0f\xff\xf8\x00\x01\xfd\xff\x80\x1f\xf9\xfc\x00\x03\xfc\x1f\xc0\x3f\x81\xfc\x00\x03\xfc\x01\xfd\xfc\x03\xfc\x00\x03\xfc\x00\xff\xf0\x03\xfc\x00\x01\xfc\x00\x3f\xe0\x01\xfc\x00\x00\xf8\x00\x00\x00\x00\xf8\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00')
    fb = framebuf.FrameBuffer(buffer, 60, 34, framebuf.MONO_HLSB)
    oled.framebuf.blit(fb, 30, 0)
    oled.text('6 claims today',10,40)
    oled.show()
    utime.sleep(15)

while True:
    tht()
    #aeroisk()  
